{
    "title": "Input schema for Smart article extractor",
    "description": "Input for Smart article extractor",
    "type": "object",
    "schemaVersion": 1,
    "properties": {
        "startUrls": {
            "title": "Start URLs",
            "type": "array",
            "description": "Can be main page URL or any category URLs. If you want direct article URLs, you have to add `{ \"label\": \"article\"}` to the userData`",
            "editor": "requestListSources"
        },
        "onlyNewArticles": {
            "title": "Only new articles",
            "type": "boolean",
            "description": "If true, will scrape only new articles each you run it. All URLs you scraped are saved in dataset called `articles-state` and are compared with new ones."
        },
        "onlyInsideArticles": {
            "title": "Only inside domain articles",
            "type": "boolean",
            "description": "If true, will scrape only articles that are on the domain from where they are linked."
        },
        "saveHtml": {
            "title": "Save full HTML",
            "type": "boolean",
            "description": "Saves full HTML of the article page but makes data less readable."
        },
        "minWords": {
            "title": "Minumum words",
            "type": "integer",
            "default": 150,
            "description": "Article need to contain at least this amount of words to be extracted",
            "sectionCaption": "Article recognition",
            "sectionDescription": "These settings tell the actor what articles should be scraped. Leaving default values usually works fine."
        },
        "dateFrom": {
            "title": "Date from",
            "type": "string",
            "description": "Only articles from this day to present will be scraped. If empty, all articles will be scraped. Format is YYYY-MM-DD, e.g. 2019-12-31",
            "editor": "textfield"
        },
        "isUrlArticleDefinition": {
            "title": "Is URL article?",
            "type": "object",
            "description": "JSON settings of what considered a link to an article. If any of them is true, then the link will be opened.",
            "editor": "json",
            "prefill": { "minDashes": 4, "linkIncludes": ["article", "storyid", "2019", "?p=", "id=", "/fpss/track", ".html", "/content/"]}
        },
        "pseudoUrls": {
            "title": "Pseudo URLs",
            "type": "array",
            "description": "Can be used to enqueue more pages like pagination or categories. Doesn't work for articles, they are recognized by the recognition system.",
            "editor": "requestListSources",
            "sectionCaption": "Custom enqueueing",
            "sectionDescription": "Use these settings to enqueue more pages. If you want to enqueue direct article URLs this way, you have to add `{ \"label\": \"article\"}` to the userData`"
        },
        "linkSelector": {
            "title": "Link selector",
            "type": "string",
            "description": "You can limit <a> tags whose links will be enqueued. By default this is empty, add `a.some-class` to enable it",
            "editor": "textfield"
        },
        "maxDepth": {
            "title": "Max depth",
            "type": "integer",
            "description": "Maximum depth of crawling. 0 is only start URLs, 1 are first level links etc. Only valid for pseudo URLs"
        },
        "proxyConfiguration": {
            "title": "Proxy configuration",
            "type": "object",
            "description": "Proxy configuration",
            "prefill": { "useApifyProxy": true },
            "editor": "proxy",
            "sectionCaption": "Proxy configuration"
        }
    }
}
